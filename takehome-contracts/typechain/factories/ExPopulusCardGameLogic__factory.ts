/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExPopulusCardGameLogic,
  ExPopulusCardGameLogicInterface,
} from "../ExPopulusCardGameLogic";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_cards",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gameHash",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "result",
        type: "uint8",
      },
    ],
    name: "BattleResult",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[3]",
        name: "ids",
        type: "uint256[3]",
      },
    ],
    name: "battle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cards",
    outputs: [
      {
        internalType: "contract ExPopulusCards",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gameTurns",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "abilityUsed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "frozen",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "shielded",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "health",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "ability",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "attack",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "length",
            type: "uint8",
          },
        ],
        internalType: "struct ExPopulusCardGameLogic.State",
        name: "playerState",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "abilityUsed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "frozen",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "shielded",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "health",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "ability",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "attack",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "length",
            type: "uint8",
          },
        ],
        internalType: "struct ExPopulusCardGameLogic.State",
        name: "enemyState",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameHash",
        type: "uint256",
      },
    ],
    name: "getGameTurns",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "abilityUsed",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "frozen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shielded",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "health",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "ability",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "attack",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "index",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "length",
                type: "uint8",
              },
            ],
            internalType: "struct ExPopulusCardGameLogic.State",
            name: "playerState",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "abilityUsed",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "frozen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shielded",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "health",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "ability",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "attack",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "index",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "length",
                type: "uint8",
              },
            ],
            internalType: "struct ExPopulusCardGameLogic.State",
            name: "enemyState",
            type: "tuple",
          },
        ],
        internalType: "struct ExPopulusCardGameLogic.Turn[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "records",
    outputs: [
      {
        internalType: "uint256",
        name: "wins",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "losses",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "draws",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cards",
        type: "address",
      },
    ],
    name: "setCards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract ExPopulusToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[3]",
        name: "ids",
        type: "uint256[3]",
      },
    ],
    name: "validate",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620021a9380380620021a9833981016040819052620000349162000106565b33806200005b57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000668162000099565b50600180546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556200013e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200010157600080fd5b919050565b600080604083850312156200011a57600080fd5b6200012583620000e9565b91506200013560208401620000e9565b90509250929050565b61205b806200014e6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80638da5cb5b11610081578063e350e5c91161005b578063e350e5c9146101e8578063f2fde38b146101fb578063fc0c546a1461020e57600080fd5b80638da5cb5b14610196578063bec8f3c2146101a7578063e1beb977146101c757600080fd5b806358a4903f116100b257806358a4903f1461015057806363c5633e1461017b578063715018a61461018e57600080fd5b8063144fa6d7146100d95780632a74b2e0146100ee578063469e906714610101575b600080fd5b6100ec6100e7366004611cd2565b610221565b005b6100ec6100fc366004611d2d565b610258565b61013061010f366004611cd2565b60036020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060015b60405180910390f35b600154610163906001600160a01b031681565b6040516001600160a01b039091168152602001610147565b6100ec610189366004611d2d565b610ef6565b6100ec611183565b6000546001600160a01b0316610163565b6101ba6101b5366004611d8d565b611197565b6040516101479190611e16565b6101da6101d5366004611e79565b6113d1565b604051610147929190611e9b565b6100ec6101f6366004611cd2565b6114fb565b6100ec610209366004611cd2565b611532565b600254610163906001600160a01b031681565b610229611586565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3233146102ac5760405162461bcd60e51b815260206004820152600c60248201527f6f6e6c792077616c6c657473000000000000000000000000000000000000000060448201526064015b60405180910390fd5b604080514260208083019190915244828401526bffffffffffffffffffffffff1933606090811b82168185015232901b166074830152825180830360680181526088909201909252805191012061030282610ef6565b60008181526004602052604081209061031a846115cc565b9050600061039d600160009054906101000a90046001600160a01b03166001600160a01b031663d8fc7a626040518163ffffffff1660e01b8152600401606060405180830381865afa158015610374573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103989190611eb8565b6115cc565b90506000604051806101000160405280600015158152602001600015158152602001600015158152602001846000815181106103db576103db611f0d565b60200260200101516020015160ff1681526020018460008151811061040257610402611f0d565b60200260200101516040015160ff1681526020018460008151811061042957610429611f0d565b60200260200101516000015160ff16815260200160008152602001845160ff16815250905060006040518061010001604052806000151581526020016000151581526020016000151581526020018460008151811061048a5761048a611f0d565b60200260200101516020015160ff168152602001846000815181106104b1576104b1611f0d565b60200260200101516040015160ff168152602001846000815181106104d8576104d8611f0d565b60200260200101516000015160ff16815260200160008152602001845160ff168152509050610557604051806101000160405280600015158152602001600015158152602001600015158152602001600060ff168152602001600060ff168152602001600060ff16815260200160008152602001600060ff1681525090565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052905b86518560c001511080156105b1575085518460c00151105b15610da45784511580156105c457508351155b1561071f57600180865280855254608080870151908601516040517f6887eee800000000000000000000000000000000000000000000000000000000815260ff9283166004820152911660248201526001600160a01b0390911690636887eee890604401602060405180830381865afa158015610645573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106699190611f23565b1561067957849250839150610680565b8392508491505b60008060006106928660800151611745565b151560208801529015156040880152925082156106be5750505060e082015160ff1660c0830152610da4565b8460200151610717576106d48560800151611745565b91151560408801529250905081156106fb5750505060e083015160ff1660c0840152610da4565b80801561070a57508560400151155b1561071757600160208701525b5050506107a5565b84516107645760018552608085015160009061073a90611745565b1515602088015290151560408801529050801561075e5750855160c0850152610da4565b506107a5565b83516107a55760018452608084015160009061077f90611745565b151560208901529015156040870152905080156107a35750865160c0860152610da4565b505b8460200151806107b6575083604001515b156108aa5783602001516108a5578360a0015160ff16856060015160ff16116108885760c085018051906107e982611f5b565b905250865160c086015114610da457868560c001518151811061080e5761080e611f0d565b602090810291909101810151015160ff16606086015260c08501518751889190811061083c5761083c611f0d565b60209081029190910101516040015160ff16608086015260c08501518751889190811061086b5761086b611f0d565b60209081029190910101515160ff1660a086015260008552610b1a565b8360a001518560600181815161089e9190611f74565b60ff169052505b610b1a565b8360200151806108bb575084604001515b156109a35784602001516108a5578460a0015160ff16846060015160ff161161098d5760c084018051906108ee82611f5b565b905250855160c085015114610da457858460c001518151811061091357610913611f0d565b602090810291909101810151015160ff16606085015260c08401518651879190811061094157610941611f0d565b60209081029190910101516040015160ff16608085015260c08401518651879190811061097057610970611f0d565b60209081029190910101515160ff1660a085015260008452610b1a565b8460a001518460600181815161089e9190611f74565b8360a0015160ff16856060015160ff16116109cc5760c085018051906109c882611f5b565b9052505b8460a0015160ff16846060015160ff16116109f55760c084018051906109f182611f5b565b9052505b86518560c001511480610a0c575085518460c00151145b610da4578360a0015160ff16856060015160ff1611610ab557868560c0015181518110610a3b57610a3b611f0d565b602090810291909101810151015160ff16606086015260c085015187518891908110610a6957610a69611f0d565b60209081029190910101516040015160ff16608086015260c085015187518891908110610a9857610a98611f0d565b60209081029190910101515160ff1660a086015260008552610ad2565b8360a0015185606001818151610acb9190611f74565b60ff169052505b8460a0015160ff16846060015160ff1611610afd57858460c001518151811061091357610913611f0d565b8460a0015184606001818151610b139190611f74565b60ff169052505b87604051806040016040528087815260200186815250908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548160ff02191690831515021790555060608201518160000160036101000a81548160ff021916908360ff16021790555060808201518160000160046101000a81548160ff021916908360ff16021790555060a08201518160000160056101000a81548160ff021916908360ff16021790555060c0820151816001015560e08201518160020160006101000a81548160ff021916908360ff160217905550505060208201518160030160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548160ff02191690831515021790555060608201518160000160036101000a81548160ff021916908360ff16021790555060808201518160000160046101000a81548160ff021916908360ff16021790555060a08201518160000160056101000a81548160ff021916908360ff16021790555060c0820151816001015560e08201518160020160006101000a81548160ff021916908360ff1602179055505050505060008560200190151590811515815250506000856040019015159081151581525050600084602001901515908115158152505060008460400190151590811515815250508080610d9c90611f5b565b915050610599565b3360009081526003602090815260408083208151606081018352815481526001820154938101939093526002015490820152885160c0880151919291148015610df1575087518660c00151145b15610e125760408201805190610e0682611f5b565b90525060009050610e4e565b88518760c0015103610e3a5760208201805190610e2e82611f5b565b90525060029050610e4e565b815182610e4682611f5b565b905250600190505b33600090815260036020908152604091829020845180825591850151600182015591840151600290920191909155610e899060ff8316611806565b60008b81526004602052604090208a54610ea591908c9061196d565b5060408051338152602081018d905260ff83168183015290517fad142d7799154ae40572d5c35e539ca00c734462ac5b0d909d216a905fe9e5759181900360600190a1505050505050505050505050565b60015481516040516331a9108f60e11b8152600481019190915233916001600160a01b031690636352211e90602401602060405180830381865afa158015610f42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f669190611f8d565b6001600160a01b031614158015610f7d5750805115155b80611010575060015460208201516040516331a9108f60e11b8152600481019190915233916001600160a01b031690636352211e90602401602060405180830381865afa158015610fd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff69190611f8d565b6001600160a01b0316141580156110105750602081015115155b806110a3575060015460408083015190516331a9108f60e11b8152600481019190915233916001600160a01b031690636352211e90602401602060405180830381865afa158015611065573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110899190611f8d565b6001600160a01b0316141580156110a35750604081015115155b156110f05760405162461bcd60e51b815260206004820152601660248201527f796f75206d757374206f776e20616c6c2063617264730000000000000000000060448201526064016102a3565b602081015181511480611107575060408101518151145b80156111135750805115155b806111335750604081015160208201511480156111335750602081015115155b156111805760405162461bcd60e51b815260206004820152601260248201527f696473206d75737420626520756e69717565000000000000000000000000000060448201526064016102a3565b50565b61118b611586565b61119560006118aa565b565b606060046000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156113c6578382906000526020600020906006020160405180604001604052908160008201604051806101000160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff161515151581526020016000820160039054906101000a900460ff1660ff1660ff1681526020016000820160049054906101000a900460ff1660ff1660ff1681526020016000820160059054906101000a900460ff1660ff1660ff168152602001600182015481526020016002820160009054906101000a900460ff1660ff1660ff1681525050815260200160038201604051806101000160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff161515151581526020016000820160039054906101000a900460ff1660ff1660ff1681526020016000820160049054906101000a900460ff1660ff1660ff1681526020016000820160059054906101000a900460ff1660ff1660ff168152602001600182015481526020016002820160009054906101000a900460ff1660ff1660ff168152505081525050815260200190600101906111cc565b505050509050919050565b600460205281600052604060002081815481106113ed57600080fd5b60009182526020918290206040805161010080820183526006909402909201805460ff8082161515855285820481161515858801526201000080830482161515868601526301000000808404831660608089019190915264010000000080860485166080808b01919091526501000000000096879004861660a0808c0191909152600189015460c0808d019190915260028a0154881660e0808e01919091528b51808f018d5260038c0154808b16151582529e8f048a1615159f81019f909f52968d04881615159a8e019a909a52938b048616928c019290925289048416908a0152929096048116918701919091526004820154928601929092526005015416918301919091529250905082565b611503611586565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b61153a611586565b6001600160a01b03811661157d576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016102a3565b611180816118aa565b6000546001600160a01b03163314611195576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016102a3565b6040805160038082526080820190925260609160009190816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816115e85790505090506000805b600381101561173c5784816003811061163657611636611f0d565b60200201511561172a5760408051606081018252600080825260208201819052918101919091526001546001600160a01b031663ef7c895987846003811061168057611680611f0d565b60200201516040518263ffffffff1660e01b81526004016116a391815260200190565b606060405180830381865afa1580156116c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e49190611fc0565b60ff908116604085015290811660208401521681528351819085908590811061170f5761170f611f0d565b6020026020010181905250828061172590611f5b565b935050505b8061173481611f5b565b91505061161b565b50909392505050565b60008060008360ff1660000361176457506001915060009050806117ff565b8360ff1660010361179d57605a61177b6064611907565b1061178f57506000915060019050816117ff565b5060009150819050806117ff565b8360ff166002036117b757506000915081905060016117ff565b60405162461bcd60e51b815260206004820152600f60248201527f696e76616c6964206162696c697479000000000000000000000000000000000060448201526064016102a3565b9193909250565b806001036118a657606461181b600584612003565b60000361182757506103e85b6002546040517f79c65068000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b03909116906379c6506890604401600060405180830381600087803b15801561188c57600080fd5b505af11580156118a0573d6000803e3d6000fd5b50505050505b5050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040805142602082015244918101919091526bffffffffffffffffffffffff1933606090811b82168184015232901b16607482015260009082906088016040516020818303038152906040528051906020012060001c6119679190612003565b92915050565b828054828255906000526020600020906006028101928215611c595760005260206000209160060282015b82811115611c5957828260008201816000016000820160009054906101000a900460ff168160000160006101000a81548160ff0219169083151502179055506000820160019054906101000a900460ff168160000160016101000a81548160ff0219169083151502179055506000820160029054906101000a900460ff168160000160026101000a81548160ff0219169083151502179055506000820160039054906101000a900460ff168160000160036101000a81548160ff021916908360ff1602179055506000820160049054906101000a900460ff168160000160046101000a81548160ff021916908360ff1602179055506000820160059054906101000a900460ff168160000160056101000a81548160ff021916908360ff160217905550600182015481600101556002820160009054906101000a900460ff168160020160006101000a81548160ff021916908360ff160217905550505060038201816003016000820160009054906101000a900460ff168160000160006101000a81548160ff0219169083151502179055506000820160019054906101000a900460ff168160000160016101000a81548160ff0219169083151502179055506000820160029054906101000a900460ff168160000160026101000a81548160ff0219169083151502179055506000820160039054906101000a900460ff168160000160036101000a81548160ff021916908360ff1602179055506000820160049054906101000a900460ff168160000160046101000a81548160ff021916908360ff1602179055506000820160059054906101000a900460ff168160000160056101000a81548160ff021916908360ff160217905550600182015481600101556002820160009054906101000a900460ff168160020160006101000a81548160ff021916908360ff1602179055505050505091600601919060060190611998565b50611c65929150611c69565b5090565b5b80821115611c6557805465ffffffffffff19908116825560006001830181905560028301805460ff1990811690915560038401805490931690925560048301556005820180549091169055600601611c6a565b6001600160a01b038116811461118057600080fd5b600060208284031215611ce457600080fd5b8135611cef81611cbd565b9392505050565b6040516060810167ffffffffffffffff81118282101715611d2757634e487b7160e01b600052604160045260246000fd5b60405290565b600060608284031215611d3f57600080fd5b82601f830112611d4e57600080fd5b611d56611cf6565b806060840185811115611d6857600080fd5b845b81811015611d82578035845260209384019301611d6a565b509095945050505050565b600060208284031215611d9f57600080fd5b5035919050565b80511515825260208101511515602083015260408101511515604083015260ff606082015116606083015260ff608082015116608083015260a0810151611df260a084018260ff169052565b5060c081015160c083015260e0810151611e1160e084018260ff169052565b505050565b6020808252825182820181905260009190848201906040850190845b81811015611e6d578351611e47848251611da6565b850151611e58610100850182611da6565b50928401926102009290920191600101611e32565b50909695505050505050565b60008060408385031215611e8c57600080fd5b50508035926020909101359150565b6102008101611eaa8285611da6565b611cef610100830184611da6565b600060608284031215611eca57600080fd5b82601f830112611ed957600080fd5b611ee1611cf6565b806060840185811115611ef357600080fd5b845b81811015611d82578051845260209384019301611ef5565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611f3557600080fd5b81518015158114611cef57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611f6d57611f6d611f45565b5060010190565b60ff828116828216039081111561196757611967611f45565b600060208284031215611f9f57600080fd5b8151611cef81611cbd565b805160ff81168114611fbb57600080fd5b919050565b600080600060608486031215611fd557600080fd5b611fde84611faa565b9250611fec60208501611faa565b9150611ffa60408501611faa565b90509250925092565b60008261202057634e487b7160e01b600052601260045260246000fd5b50069056fea2646970667358221220676344df07756064537d8d3bffa0d2797cec8eeb1a17b132fcfa314114e4cb9d64736f6c63430008140033";

export class ExPopulusCardGameLogic__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _cards: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExPopulusCardGameLogic> {
    return super.deploy(
      _cards,
      _token,
      overrides || {}
    ) as Promise<ExPopulusCardGameLogic>;
  }
  getDeployTransaction(
    _cards: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_cards, _token, overrides || {});
  }
  attach(address: string): ExPopulusCardGameLogic {
    return super.attach(address) as ExPopulusCardGameLogic;
  }
  connect(signer: Signer): ExPopulusCardGameLogic__factory {
    return super.connect(signer) as ExPopulusCardGameLogic__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExPopulusCardGameLogicInterface {
    return new utils.Interface(_abi) as ExPopulusCardGameLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExPopulusCardGameLogic {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ExPopulusCardGameLogic;
  }
}
