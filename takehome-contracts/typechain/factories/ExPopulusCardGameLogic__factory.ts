/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExPopulusCardGameLogic,
  ExPopulusCardGameLogicInterface,
} from "../ExPopulusCardGameLogic";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_cards",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "attack",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "health",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "ability",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct ExPopulusCardGameLogic.CardData[3]",
        name: "playerDeck",
        type: "tuple[3]",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "attack",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "health",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "ability",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct ExPopulusCardGameLogic.CardData[3]",
        name: "enemyDeck",
        type: "tuple[3]",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "result",
        type: "uint8",
      },
    ],
    name: "BattleResult",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[3]",
        name: "ids",
        type: "uint256[3]",
      },
    ],
    name: "battle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cards",
    outputs: [
      {
        internalType: "contract ExPopulusCards",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "records",
    outputs: [
      {
        internalType: "uint256",
        name: "wins",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "losses",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "draws",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cards",
        type: "address",
      },
    ],
    name: "setCards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract ExPopulusToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[3]",
        name: "ids",
        type: "uint256[3]",
      },
    ],
    name: "validate",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

export class ExPopulusCardGameLogic__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _cards: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExPopulusCardGameLogic> {
    return super.deploy(
      _cards,
      _token,
      overrides || {}
    ) as Promise<ExPopulusCardGameLogic>;
  }
  getDeployTransaction(
    _cards: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_cards, _token, overrides || {});
  }
  attach(address: string): ExPopulusCardGameLogic {
    return super.attach(address) as ExPopulusCardGameLogic;
  }
  connect(signer: Signer): ExPopulusCardGameLogic__factory {
    return super.connect(signer) as ExPopulusCardGameLogic__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExPopulusCardGameLogicInterface {
    return new utils.Interface(_abi) as ExPopulusCardGameLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExPopulusCardGameLogic {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ExPopulusCardGameLogic;
  }
}
