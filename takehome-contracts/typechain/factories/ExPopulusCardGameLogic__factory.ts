/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExPopulusCardGameLogic,
  ExPopulusCardGameLogicInterface,
} from "../ExPopulusCardGameLogic";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_cards",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gameHash",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "attack",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "health",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "ability",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct ExPopulusCardGameLogic.CardData[]",
        name: "playerDeck",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "attack",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "health",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "ability",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct ExPopulusCardGameLogic.CardData[]",
        name: "enemyDeck",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "result",
        type: "uint8",
      },
    ],
    name: "BattleResult",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[3]",
        name: "ids",
        type: "uint256[3]",
      },
    ],
    name: "battle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cards",
    outputs: [
      {
        internalType: "contract ExPopulusCards",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gameTurns",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "abilityUsed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "frozen",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "shielded",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "health",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "ability",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "attack",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "index",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "length",
            type: "uint8",
          },
        ],
        internalType: "struct ExPopulusCardGameLogic.State",
        name: "playerState",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "abilityUsed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "frozen",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "shielded",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "health",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "ability",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "attack",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "index",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "length",
            type: "uint8",
          },
        ],
        internalType: "struct ExPopulusCardGameLogic.State",
        name: "enemyState",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameHash",
        type: "uint256",
      },
    ],
    name: "getGameTurns",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "abilityUsed",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "frozen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shielded",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "health",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "ability",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "attack",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "index",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "length",
                type: "uint8",
              },
            ],
            internalType: "struct ExPopulusCardGameLogic.State",
            name: "playerState",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "abilityUsed",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "frozen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shielded",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "health",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "ability",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "attack",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "index",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "length",
                type: "uint8",
              },
            ],
            internalType: "struct ExPopulusCardGameLogic.State",
            name: "enemyState",
            type: "tuple",
          },
        ],
        internalType: "struct ExPopulusCardGameLogic.Turn[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "records",
    outputs: [
      {
        internalType: "uint256",
        name: "wins",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "losses",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "draws",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cards",
        type: "address",
      },
    ],
    name: "setCards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract ExPopulusToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[3]",
        name: "ids",
        type: "uint256[3]",
      },
    ],
    name: "validate",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200244d3803806200244d833981016040819052620000349162000106565b33806200005b57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000668162000099565b50600180546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556200013e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200010157600080fd5b919050565b600080604083850312156200011a57600080fd5b6200012583620000e9565b91506200013560208401620000e9565b90509250929050565b6122ff806200014e6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80638da5cb5b11610081578063e350e5c91161005b578063e350e5c9146101e8578063f2fde38b146101fb578063fc0c546a1461020e57600080fd5b80638da5cb5b14610196578063bec8f3c2146101a7578063e1beb977146101c757600080fd5b806358a4903f116100b257806358a4903f1461015057806363c5633e1461017b578063715018a61461018e57600080fd5b8063144fa6d7146100d95780632a74b2e0146100ee578063469e906714610101575b600080fd5b6100ec6100e7366004611ea3565b610221565b005b6100ec6100fc366004611efe565b610258565b61013061010f366004611ea3565b60036020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060015b60405180910390f35b600154610163906001600160a01b031681565b6040516001600160a01b039091168152602001610147565b6100ec610189366004611efe565b610f8f565b6100ec61121c565b6000546001600160a01b0316610163565b6101ba6101b5366004611f5e565b611230565b6040516101479190611ff2565b6101da6101d5366004612055565b611490565b604051610147929190612077565b6100ec6101f6366004611ea3565b6116ab565b6100ec610209366004611ea3565b6116e2565b600254610163906001600160a01b031681565b610229611736565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3233146102ac5760405162461bcd60e51b815260206004820152600c60248201527f6f6e6c792077616c6c657473000000000000000000000000000000000000000060448201526064015b60405180910390fd5b604080514260208083019190915244828401526bffffffffffffffffffffffff1933606090811b82168185015232901b166074830152825180830360680181526088909201909252805191012061030282610f8f565b60008181526004602052604081209061031a8461177c565b9050600061039d600160009054906101000a90046001600160a01b03166001600160a01b031663d8fc7a626040518163ffffffff1660e01b8152600401606060405180830381865afa158015610374573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103989190612094565b61177c565b90506000604051806101000160405280600015158152602001600015158152602001600015158152602001846000815181106103db576103db6120e9565b60200260200101516020015160ff16815260200184600081518110610402576104026120e9565b60200260200101516040015160ff16815260200184600081518110610429576104296120e9565b60200260200101516000015160ff168152602001600060ff168152602001845160ff16815250905060006040518061010001604052806000151581526020016000151581526020016000151581526020018460008151811061048d5761048d6120e9565b60200260200101516020015160ff168152602001846000815181106104b4576104b46120e9565b60200260200101516040015160ff168152602001846000815181106104db576104db6120e9565b6020908102919091018101515160ff908116835260008383018190528751909116604093840152825161010081018452818152918201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091529091506040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915260005b86518560c0015160ff161080156105a3575085518460c0015160ff16105b15610e375784511580156105b657508351155b1561071157600180865280855254608080870151908601516040517f6887eee800000000000000000000000000000000000000000000000000000000815260ff9283166004820152911660248201526001600160a01b0390911690636887eee890604401602060405180830381865afa158015610637573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065b91906120ff565b1561066b57849250839150610672565b8392508491505b600080600061068486608001516118f5565b151560208801529015156040880152925082156106b05750505060e082015160ff1660c0830152610e37565b8460200151610709576106c685608001516118f5565b91151560408801529250905081156106ed5750505060e083015160ff1660c0840152610e37565b8080156106fc57508560400151155b1561070957600160208701525b5050506107a3565b845161075c5760018552608085015160009061072c906118f5565b15156020880152901515604088015290508015610756575060e084015160ff1660c0850152610e37565b506107a3565b83516107a357600184526080840151600090610777906118f5565b151560208901529015156040870152905080156107a1575060e085015160ff1660c0860152610e37565b505b8460200151806107b4575083604001515b156108c55783602001516108c0578360a0015160ff16856060015160ff16116108a35760c085018051906107e782612137565b60ff1660ff168152505086518560c0015160ff160315610e3757868560c0015160ff168151811061081a5761081a6120e9565b602002602001015160200151856060019060ff16908160ff1681525050868560c0015160ff1681518110610850576108506120e9565b602002602001015160400151856080019060ff16908160ff1681525050868560c0015160ff1681518110610886576108866120e9565b60209081029190910101515160ff1660a086015260008552610b7f565b8360a00151856060018181516108b99190612156565b60ff169052505b610b7f565b8360200151806108d6575084604001515b156109e15784602001516108c0578460a0015160ff16846060015160ff16116109cb5760c0840180519061090982612137565b60ff1660ff16815250508360e0015160ff168460c0015160ff160315610e3757858460c0015160ff1681518110610942576109426120e9565b602002602001015160200151846060019060ff16908160ff1681525050858460c0015160ff1681518110610978576109786120e9565b602002602001015160400151846080019060ff16908160ff1681525050858460c0015160ff16815181106109ae576109ae6120e9565b60209081029190910101515160ff1660a085015260008452610b7f565b8460a00151846060018181516108b99190612156565b8360a0015160ff16856060015160ff1611610a0d5760c08501805190610a0682612137565b60ff169052505b8460a0015160ff16846060015160ff1611610a395760c08401805190610a3282612137565b60ff169052505b86518560c0015160ff161480610a5c57508360e0015160ff168460c0015160ff16145b610e37578360a0015160ff16856060015160ff1611610b1757868560c0015160ff1681518110610a8e57610a8e6120e9565b602002602001015160200151856060019060ff16908160ff1681525050868560c0015160ff1681518110610ac457610ac46120e9565b602002602001015160400151856080019060ff16908160ff1681525050868560c0015160ff1681518110610afa57610afa6120e9565b60209081029190910101515160ff1660a086015260008552610b34565b8360a0015185606001818151610b2d9190612156565b60ff169052505b8460a0015160ff16846060015160ff1611610b6257858460c0015160ff1681518110610942576109426120e9565b8460a0015184606001818151610b789190612156565b60ff169052505b87604051806040016040528087815260200186815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548160ff02191690831515021790555060608201518160000160036101000a81548160ff021916908360ff16021790555060808201518160000160046101000a81548160ff021916908360ff16021790555060a08201518160000160056101000a81548160ff021916908360ff16021790555060c08201518160000160066101000a81548160ff021916908360ff16021790555060e08201518160000160076101000a81548160ff021916908360ff160217905550505060208201518160010160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548160ff02191690831515021790555060608201518160000160036101000a81548160ff021916908360ff16021790555060808201518160000160046101000a81548160ff021916908360ff16021790555060a08201518160000160056101000a81548160ff021916908360ff16021790555060c08201518160000160066101000a81548160ff021916908360ff16021790555060e08201518160000160076101000a81548160ff021916908360ff1602179055505050505060008560200190151590811515815250506000856040019015159081151581525050600084602001901515908115158152505060008460400190151590811515815250508080610e2f9061216f565b915050610585565b3360009081526003602090815260408083208151606081018352815481526001820154938101939093526002015490820152885160c088015191929160ff16148015610e8a575087518660c0015160ff16145b15610eab5760408201805190610e9f8261216f565b90525060009050610eea565b88518760c0015160ff1603610ed65760208201805190610eca8261216f565b90525060029050610eea565b815182610ee28261216f565b905250600190505b33600090815260036020908152604091829020845180825591850151600182015591840151600290920191909155610f259060ff83166119b6565b60008b81526004602052604090208a54610f4191908c90611b1d565b507f6aeaa88470c08aa431fe4452b98ae2afdd6dc449509ae67ba2487e570951abbd338c8b8b85604051610f799594939291906121e1565b60405180910390a1505050505050505050505050565b60015481516040516331a9108f60e11b8152600481019190915233916001600160a01b031690636352211e90602401602060405180830381865afa158015610fdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fff9190612231565b6001600160a01b0316141580156110165750805115155b806110a9575060015460208201516040516331a9108f60e11b8152600481019190915233916001600160a01b031690636352211e90602401602060405180830381865afa15801561106b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108f9190612231565b6001600160a01b0316141580156110a95750602081015115155b8061113c575060015460408083015190516331a9108f60e11b8152600481019190915233916001600160a01b031690636352211e90602401602060405180830381865afa1580156110fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111229190612231565b6001600160a01b03161415801561113c5750604081015115155b156111895760405162461bcd60e51b815260206004820152601660248201527f796f75206d757374206f776e20616c6c2063617264730000000000000000000060448201526064016102a3565b6020810151815114806111a0575060408101518151145b80156111ac5750805115155b806111cc5750604081015160208201511480156111cc5750602081015115155b156112195760405162461bcd60e51b815260206004820152601260248201527f696473206d75737420626520756e69717565000000000000000000000000000060448201526064016102a3565b50565b611224611736565b61122e6000611a5a565b565b606060046000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611485578382906000526020600020906002020160405180604001604052908160008201604051806101000160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff161515151581526020016000820160039054906101000a900460ff1660ff1660ff1681526020016000820160049054906101000a900460ff1660ff1660ff1681526020016000820160059054906101000a900460ff1660ff1660ff1681526020016000820160069054906101000a900460ff1660ff1660ff1681526020016000820160079054906101000a900460ff1660ff1660ff1681525050815260200160018201604051806101000160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff161515151581526020016000820160039054906101000a900460ff1660ff1660ff1681526020016000820160049054906101000a900460ff1660ff1660ff1681526020016000820160059054906101000a900460ff1660ff1660ff1681526020016000820160069054906101000a900460ff1660ff1660ff1681526020016000820160079054906101000a900460ff1660ff1660ff16815250508152505081526020019060010190611265565b505050509050919050565b600460205281600052604060002081815481106114ac57600080fd5b90600052602060002090600202016000915091505080600001604051806101000160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff161515151581526020016000820160039054906101000a900460ff1660ff1660ff1681526020016000820160049054906101000a900460ff1660ff1660ff1681526020016000820160059054906101000a900460ff1660ff1660ff1681526020016000820160069054906101000a900460ff1660ff1660ff1681526020016000820160079054906101000a900460ff1660ff1660ff16815250509080600101604051806101000160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff161515151581526020016000820160039054906101000a900460ff1660ff1660ff1681526020016000820160049054906101000a900460ff1660ff1660ff1681526020016000820160059054906101000a900460ff1660ff1660ff1681526020016000820160069054906101000a900460ff1660ff1660ff1681526020016000820160079054906101000a900460ff1660ff1660ff1681525050905082565b6116b3611736565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6116ea611736565b6001600160a01b03811661172d576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016102a3565b61121981611a5a565b6000546001600160a01b0316331461122e576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016102a3565b6040805160038082526080820190925260609160009190816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816117985790505090506000805b60038110156118ec578481600381106117e6576117e66120e9565b6020020151156118da5760408051606081018252600080825260208201819052918101919091526001546001600160a01b031663ef7c8959878460038110611830576118306120e9565b60200201516040518263ffffffff1660e01b815260040161185391815260200190565b606060405180830381865afa158015611870573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118949190612264565b60ff90811660408501529081166020840152168152835181908590859081106118bf576118bf6120e9565b602002602001018190525082806118d59061216f565b935050505b806118e48161216f565b9150506117cb565b50909392505050565b60008060008360ff1660000361191457506001915060009050806119af565b8360ff1660010361194d57605a61192b6064611ab7565b1061193f57506000915060019050816119af565b5060009150819050806119af565b8360ff1660020361196757506000915081905060016119af565b60405162461bcd60e51b815260206004820152600f60248201527f696e76616c6964206162696c697479000000000000000000000000000000000060448201526064016102a3565b9193909250565b80600103611a565760646119cb6005846122a7565b6000036119d757506103e85b6002546040517f79c65068000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b03909116906379c6506890604401600060405180830381600087803b158015611a3c57600080fd5b505af1158015611a50573d6000803e3d6000fd5b50505050505b5050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040805142602082015244918101919091526bffffffffffffffffffffffff1933606090811b82168184015232901b16607482015260009082906088016040516020818303038152906040528051906020012060001c611b1791906122a7565b92915050565b828054828255906000526020600020906002028101928215611e515760005260206000209160020282015b82811115611e5157828260008201816000016000820160009054906101000a900460ff168160000160006101000a81548160ff0219169083151502179055506000820160019054906101000a900460ff168160000160016101000a81548160ff0219169083151502179055506000820160029054906101000a900460ff168160000160026101000a81548160ff0219169083151502179055506000820160039054906101000a900460ff168160000160036101000a81548160ff021916908360ff1602179055506000820160049054906101000a900460ff168160000160046101000a81548160ff021916908360ff1602179055506000820160059054906101000a900460ff168160000160056101000a81548160ff021916908360ff1602179055506000820160069054906101000a900460ff168160000160066101000a81548160ff021916908360ff1602179055506000820160079054906101000a900460ff168160000160076101000a81548160ff021916908360ff160217905550505060018201816001016000820160009054906101000a900460ff168160000160006101000a81548160ff0219169083151502179055506000820160019054906101000a900460ff168160000160016101000a81548160ff0219169083151502179055506000820160029054906101000a900460ff168160000160026101000a81548160ff0219169083151502179055506000820160039054906101000a900460ff168160000160036101000a81548160ff021916908360ff1602179055506000820160049054906101000a900460ff168160000160046101000a81548160ff021916908360ff1602179055506000820160059054906101000a900460ff168160000160056101000a81548160ff021916908360ff1602179055506000820160069054906101000a900460ff168160000160066101000a81548160ff021916908360ff1602179055506000820160079054906101000a900460ff168160000160076101000a81548160ff021916908360ff1602179055505050505091600201919060020190611b48565b50611e5d929150611e61565b5090565b5b80821115611e5d57805467ffffffffffffffff1990811682556001820180549091169055600201611e62565b6001600160a01b038116811461121957600080fd5b600060208284031215611eb557600080fd5b8135611ec081611e8e565b9392505050565b6040516060810167ffffffffffffffff81118282101715611ef857634e487b7160e01b600052604160045260246000fd5b60405290565b600060608284031215611f1057600080fd5b82601f830112611f1f57600080fd5b611f27611ec7565b806060840185811115611f3957600080fd5b845b81811015611f53578035845260209384019301611f3b565b509095945050505050565b600060208284031215611f7057600080fd5b5035919050565b80511515825260208101511515602083015260408101511515604083015260ff606082015116606083015260ff608082015116608083015260a0810151611fc360a084018260ff169052565b5060c0810151611fd860c084018260ff169052565b5060e0810151611fed60e084018260ff169052565b505050565b6020808252825182820181905260009190848201906040850190845b81811015612049578351612023848251611f77565b850151612034610100850182611f77565b5092840192610200929092019160010161200e565b50909695505050505050565b6000806040838503121561206857600080fd5b50508035926020909101359150565b61020081016120868285611f77565b611ec0610100830184611f77565b6000606082840312156120a657600080fd5b82601f8301126120b557600080fd5b6120bd611ec7565b8060608401858111156120cf57600080fd5b845b81811015611f535780518452602093840193016120d1565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561211157600080fd5b81518015158114611ec057600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff810361214d5761214d612121565b60010192915050565b60ff8281168282160390811115611b1757611b17612121565b60006001820161218157612181612121565b5060010190565b600081518084526020808501945080840160005b838110156121d6578151805160ff9081168952848201518116858a015260409182015116908801526060909601959082019060010161219c565b509495945050505050565b6001600160a01b038616815284602082015260a06040820152600061220960a0830186612188565b828103606084015261221b8186612188565b91505060ff831660808301529695505050505050565b60006020828403121561224357600080fd5b8151611ec081611e8e565b805160ff8116811461225f57600080fd5b919050565b60008060006060848603121561227957600080fd5b6122828461224e565b92506122906020850161224e565b915061229e6040850161224e565b90509250925092565b6000826122c457634e487b7160e01b600052601260045260246000fd5b50069056fea2646970667358221220032e1a08f33dd0247cf79e936192bcd7879a26583b6ad15d2754d08bdd4fa7a664736f6c63430008140033";

export class ExPopulusCardGameLogic__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _cards: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExPopulusCardGameLogic> {
    return super.deploy(
      _cards,
      _token,
      overrides || {}
    ) as Promise<ExPopulusCardGameLogic>;
  }
  getDeployTransaction(
    _cards: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_cards, _token, overrides || {});
  }
  attach(address: string): ExPopulusCardGameLogic {
    return super.attach(address) as ExPopulusCardGameLogic;
  }
  connect(signer: Signer): ExPopulusCardGameLogic__factory {
    return super.connect(signer) as ExPopulusCardGameLogic__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExPopulusCardGameLogicInterface {
    return new utils.Interface(_abi) as ExPopulusCardGameLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExPopulusCardGameLogic {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ExPopulusCardGameLogic;
  }
}
